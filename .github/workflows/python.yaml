name: Python package

on:
  push:
    branches: [ "main", "CI" ]

  pull_request:
    branches: [ "main" , "CI"]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install virtualenv
        python -m virtualenv venv
        source venv/bin/activate
        python -m pip install flake8 pytest django pytest fastapi uvicorn
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        source venv/bin/activate
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --exclude=venv --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --exclude=venv --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check installed packages
      run: |
        source venv/bin/activate
        pip list

    - name: Check directory structure
      run: |
        pwd
        ls -la
        
    - name: Set environment variables
      run: |
        echo "DB_NAME=test_promocodes" >> $GITHUB_ENV
        echo "DB_USER=app" >> $GITHUB_ENV
        echo "DB_PASSWORD=123qwe" >> $GITHUB_ENV
        echo "DB_HOST=45.91.8.40" >> $GITHUB_ENV
        echo "DB_PORT=5431" >> $GITHUB_ENV

    - name: Make migrations
      run: |
        source venv/bin/activate
        cd admin
        source ../venv/bin/activate
        python manage.py makemigrations promocodes users
            
    - name: Drop existing test database
      run: |
        PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -U $DB_USER -p $DB_PORT -d promocodes -c "DROP DATABASE IF EXISTS ${DB_NAME};"
            
    - name: Change environment variables
      run: |
        echo "DB_NAME=promocodes" >> $GITHUB_ENV
        
    - name: Run Django tests
      run: |
        source venv/bin/activate
        cd admin
        source ../venv/bin/activate
        python manage.py test 
        cd ../..

    - name: Run pytest
      run: |
        source venv/bin/activate
        pytest

